name: Compile on Linux

on:
  release:
    types: [published]
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        compiler: [clang++]
        build_type: [Debug]
        qt: [6.4.*]

    steps:
    - name: Debug Info
      run: | 
        echo "Compile on ${{ matrix.os }} ${{ matrix.compiler }} ${{ matrix.build_type }} Qt-${{ matrix.qt }}"
        echo "# Ubuntu Version:"
        cat /etc/issue
        echo "# Available CLang Compilers:"
        ls /usr/bin/clang++-*
        echo "# ${{ matrix.compiler }} version:"
        ${{ matrix.compiler }} --version
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        echo "gcc:"
        dpkg -l | grep gcc
        dpkg -l | grep g++
        dpkg -l | grep libstdc++
    - name: Checkout Enroute
      uses: actions/checkout@v3
      with:
        path: enroute
        submodules: true
    - name: Checkout qtlocation
      uses: actions/checkout@v3
      with:
        path: qtlocation
        repository: Akaflieg-Freiburg/qtlocationstatic
        submodules: true
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt }}
        modules: 'qt5compat qthttpserver qtimageformats qtpositioning qtshadertools qtspeech qtwebsockets'
    - name: Install Additional Software
      run: |
        sudo apt install build-essential gcc g++ clang libc++-dev cmake extra-cmake-modules doxygen ninja-build spirv-tools libzip-dev zipcmp zipmerge ziptool 
        sudo apt remove gcc-13 g++-13 libgcc-13-dev libstdc++-13-dev
    - name: Compile QtLocation
      run: |
        cmake -E make_directory build-qtlocation
        cd build-qtlocation
        qt-configure-module ../qtlocation
        cmake . -GNinja -DMBGL_QT_WITH_INTERNAL_ICU:BOOL=On
        ninja
        ninja install
    - name: Compile Enroute Flight Navigation
      run: |
        whereis qt-cmake
        cmake -E make_directory build-enroute
        cd build-enroute
        qt-cmake ../enroute -GNinja -DCMAKE_CXX_FLAGS='-Werror -Wall -Wextra' -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        cmake --build .
